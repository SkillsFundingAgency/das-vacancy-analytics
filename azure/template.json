{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedSqlServerName": {
            "type": "string"
        },
        "elasticPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "databaseSkuName": {
            "type": "string"
        },
        "databaseTier": {
            "type": "string"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "eventHubNamespaceName": {
            "type": "string"
        },
        "eventHubPartitionCount": {
            "type": "int"
        },
        "sqlConnectionString": {
            "type": "securestring"
        },
        "recruitQueueConnectionString": {
            "type": "securestring"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "string"
        },
        "sessionRedisConnectionString": {
            "type": "securestring"
        },
        "aspSize": {
            "type": "string",
            "defaultValue": "2"
        },
        "aspInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "customHostName": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultCertificateName": {
            "type": "string",
            "defaultValue": ""
        },
        "wafOutboundIpAddresses": {
            "type": "array",
            "defaultValue": []
        },
        "dfeOutboundIpAddresses": {
            "type": "array",
            "defaultValue": []
        },
        "functionsExtensionVersion": {
            "type": "string",
            "defaultValue": "~3"
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        },
        "workerAccessRestrictions": {
            "type": "array"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow('yyMMddHHmmss')]"
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
        "storageAccountName": "[concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'),'str')]",
        "functionAppName": "[concat(variables('resourceNamePrefix'), '-fa')]",
        "hubName": "vacancy",
        "workerAppServiceName": "[concat(variables('ResourceNamePrefix'), 'wkr-as')]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'),'-rg')]"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/resourceGroups",
            "name": "[variables('resourceGroupName')]",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('subnetObject').name, '-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('subnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('subnetObject').name, '-sql-firewall-rule-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serverName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "subnetResourceIdList": {
                        "value": "[createArray(reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.SubnetResourceId.value)]"
                    }
                }
            }
        },
        {
            "condition": "[greater(length(parameters('customHostName')), 0)]",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('functionAppName'), '-certificate-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('keyVaultCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('databaseName'), '-sql-database-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('SharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSqlServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('elasticPoolName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('databaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('databaseTier')]"
                    },
                    "logAnalyticsSubscriptionId": {
                        "value": "[parameters('logAnalyticsSubscriptionId')]"
                    },
                    "logAnalyticsResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('hubName'), '-event-hub-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('SharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'event-hub-hub.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hubName": {
                        "value": "[variables('hubName')]"
                    },
                    "eventHubNamespaceName": {
                        "value": "[parameters('eventHubNamespaceName')]"
                    },
                    "partitionCount": {
                        "value": "[parameters('eventHubPartitionCount')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('appServicePlanName'), '-app-service-plan-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('storageAccountName'), '-storage-account-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    },
                    "minimumTlsVersion": {
                        "value": "[parameters('minimumTlsVersion')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('functionAppName'), '-app-insights-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('functionAppName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('functionAppName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[concat(parameters('wafOutboundIpAddresses'), parameters('dfeOutboundIpAddresses'))]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(concat(variables('functionAppName'), '-app-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet"
                                },
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[reference(concat(variables('storageAccountName'), '-storage-account-', parameters('utcValue'))).outputs.storageConnectionString.value]"
                                },
                                {
                                    "name": "VacancyEventHub",
                                    "value": "[reference(concat(variables('hubName'), '-event-hub-', parameters('utcValue'))).outputs.HubEndpoint.value]"
                                },
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "[parameters('functionsExtensionVersion')]"
                                },
                                {
                                    "name": "FUNCTIONS_ENVIRONMENT",
                                    "value": "[toUpper(parameters('environmentName'))]"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "functionAppConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "VacancyAnalyticEventsSqlDbConnectionString",
                                    "connectionString": "[parameters('sqlConnectionString')]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "QueueStorage",
                                    "connectionString": "[parameters('recruitQueueConnectionString')]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('loggingRedisConnectionString')]",
                                    "type": "Custom"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('customHostname')), 0), reference(concat(variables('functionAppName'), '-certificate-', parameters('utcValue')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('appServicePlanName'), '-app-service-plan-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('workerAppServiceName'), '-app-insights-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('workerAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('workerAppServiceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('workerAppServiceName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('workerAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('subnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "deployStagingSlot": {
                        "value": false
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('workerAccessRestrictions')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisKey",
                                    "value": "[parameters('loggingRedisKey')]"
                                },
                                {
                                    "name": "ASPNETCORE_ENVIRONMENT",
                                    "value": "[toUpper(parameters('environmentName'))]"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference(concat(variables('workerAppServiceName'), '-app-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                                }
                            ]
                        }
                    },
                    "appServiceConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "AzureWebJobsStorage",
                                    "connectionString": "[reference(concat(variables('storageAccountName'), '-storage-account-', parameters('utcValue'))).outputs.storageConnectionString.value]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('sessionRedisConnectionString')]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "VacancyAnalyticEventsSqlDbConnectionString",
                                    "connectionString": "[parameters('sqlConnectionString')]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "VacancyEventHub",
                                    "connectionString": "[reference(concat(variables('hubName'), '-event-hub-', parameters('utcValue'))).outputs.HubEndpointReadOnly.value]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet"
                                }
                            ]
                        }
                    },
                    "appServiceVirtualApplications": {
                        "value": [
                            {
                                "virtualPath": "/",
                                "physicalPath": "site\\wwwroot"
                            },
                            {
                                "virtualPath": "/Vacancy.Analytics.Jobs",
                                "physicalPath": "site\\wwwroot\\app_data\\jobs\\continuous\\Vacancy.Analytics.Jobs"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('appServicePlanName'), '-app-service-plan-', parameters('utcValue'))]"
            ]
        }
    ],
    "outputs": {
        "DatabaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        },
        "WorkerAppServiceName": {
            "type": "string",
            "value": "[variables('workerAppServiceName')]"
        },
        "FunctionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}
